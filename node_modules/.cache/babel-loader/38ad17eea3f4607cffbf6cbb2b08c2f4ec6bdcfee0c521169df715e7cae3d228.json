{"ast":null,"code":"var _jsxFileName = \"D:\\\\XAMPP\\\\htdocs\\\\mirea\\\\react_chat\\\\src\\\\components\\\\authorizations\\\\auth.jsx\",\n  _s = $RefreshSig$();\nimport './auth.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, setCurrent } from \"../reduxComp/userSlice\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Auth() {\n  _s();\n  const users = useSelector(state => state.user.users);\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({\n    login: \"\",\n    password: \"\",\n    role: false,\n    rights: \"\"\n  });\n  function storeUser() {\n    let login = document.getElementById(\"login\").value;\n    let password = document.getElementById(\"password\").value;\n    let role = document.getElementById(\"role\").checked === true ? \"admin\" : \"user\";\n    let rights = document.getElementById(\"rights\").value;\n    let user = {\n      login: login,\n      password: password,\n      role: role,\n      rights: rights\n    };\n    if (users.find(u => u.login === login)) {\n      if (users.find(u => u.login === login && u.password === password)) dispatch(setCurrent(user));else alert(\"User already exists\");\n    } else dispatch(addUser(user));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"login\",\n      placeholder: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"password\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"rights\",\n      placeholder: \"Rights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"role\",\n      children: [\"Admin?\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"auth\",\n      value: \"Login/Register\",\n      onClick: storeUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Auth, \"BvoTdS1X12aN+fuy/yjHkP0uk8M=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Auth;\nexport default Auth;\nexport const isAuthenticated = user => !!user;\nexport const isAllowed = (user, rights) => rights.some(right => user.rights.includes(right));\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["useDispatch","useSelector","addUser","setCurrent","useState","jsxDEV","_jsxDEV","Auth","_s","users","state","user","dispatch","form","setForm","login","password","role","rights","storeUser","document","getElementById","value","checked","find","u","alert","className","children","type","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","_c","isAuthenticated","isAllowed","some","right","includes","$RefreshReg$"],"sources":["D:/XAMPP/htdocs/mirea/react_chat/src/components/authorizations/auth.jsx"],"sourcesContent":["import './auth.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addUser, setCurrent} from \"../reduxComp/userSlice\";\r\nimport {useState} from \"react\";\r\n\r\nfunction Auth() {\r\n    const users = useSelector((state) => state.user.users)\r\n    const dispatch = useDispatch()\r\n\r\n    const [form, setForm] = useState({login: \"\", password: \"\", role: false, rights: \"\"})\r\n\r\n    function storeUser() {\r\n        let login = document.getElementById(\"login\").value\r\n        let password = document.getElementById(\"password\").value\r\n        let role = document.getElementById(\"role\").checked === true ? \"admin\" : \"user\"\r\n        let rights = document.getElementById(\"rights\").value\r\n        let user = {login: login, password: password, role: role, rights: rights}\r\n        if (users.find(u => u.login === login))\r\n            if (users.find(u => u.login === login && u.password === password))\r\n                dispatch(setCurrent(user))\r\n            else alert(\"User already exists\")\r\n        else\r\n            dispatch(addUser(user))\r\n    }\r\n\r\n    return (\r\n        <div className={\"authBox\"}>\r\n            <input type=\"text\" id=\"login\" placeholder={\"Login\"}/>\r\n            <input type=\"text\" id=\"password\" placeholder={\"Password\"}/>\r\n            <input type=\"text\" id=\"rights\" placeholder={\"Rights\"}/>\r\n            <label htmlFor={\"role\"}>Admin?<input type=\"checkbox\" id=\"role\"/></label>\r\n            <input type=\"button\" id=\"auth\" value={\"Login/Register\"} onClick={storeUser}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n\r\nexport const isAuthenticated = user => !!user;\r\n\r\nexport const isAllowed = (user, rights) =>\r\n    rights.some(right => user.rights.includes(right));"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}