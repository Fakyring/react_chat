{"ast":null,"code":"var _jsxFileName = \"D:\\\\XAMPP\\\\htdocs\\\\mirea\\\\react_chat\\\\src\\\\components\\\\api\\\\apitest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Apitest() {\n  _s();\n  const [user, setUser] = useState({\n    login: '',\n    password: ''\n  });\n  function loginClick() {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        login: user.login,\n        password: user.password\n      })\n    };\n    fetch('http://localhost:8000/api/v1/login', requestOptions).then(response => response.json()).then(data => this.setState({\n      access_token: data.access_token\n    }));\n    console.log(login);\n  }\n  const handleChange = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'login',\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"login\",\n      onChange: e => setUser(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'password',\n      children: [user.password, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      type: 'password',\n      onChange: e => setUser(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loginClick,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Apitest, \"4l9Hlp4nsJDUoRPlUN+GCN94w5k=\");\n_c = Apitest;\nexport default Apitest;\nvar _c;\n$RefreshReg$(_c, \"Apitest\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Apitest","_s","user","setUser","login","password","loginClick","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","setState","access_token","console","log","handleChange","e","setData","target","name","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","type","onClick","_c","$RefreshReg$"],"sources":["D:/XAMPP/htdocs/mirea/react_chat/src/components/api/apitest.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction Apitest() {\r\n    const [user, setUser] = useState({login: '', password: ''})\r\n\r\n    function loginClick() {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({login: user.login, password: user.password})\r\n        };\r\n        fetch('http://localhost:8000/api/v1/login', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({access_token: data.access_token}));\r\n        console.log(login)\r\n    }\r\n    const handleChange = (e) => {\r\n        setData({ ...data, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor={'login'}>Name:</label>\r\n            <input id='login' onChange={e => setUser(e.target.value)}/>\r\n            <label htmlFor={'password'}>{user.password}:</label>\r\n            <input id='password' type={'password'} onChange={e => setUser(e.target.value)}/>\r\n            <button onClick={loginClick}>Login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Apitest"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAACO,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC;EAE3D,SAASC,UAAUA,CAAA,EAAG;IAClB,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK,EAAEF,IAAI,CAACE,KAAK;QAAEC,QAAQ,EAAEH,IAAI,CAACG;MAAQ,CAAC;IACrE,CAAC;IACDQ,KAAK,CAAC,oCAAoC,EAAEN,cAAc,CAAC,CACtDO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI,IAAI,CAACC,QAAQ,CAAC;MAACC,YAAY,EAAEF,IAAI,CAACE;IAAY,CAAC,CAAC,CAAC;IACnEC,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;EACtB;EACA,MAAMkB,YAAY,GAAIC,CAAC,IAAK;IACxBC,OAAO,CAAC;MAAE,GAAGP,IAAI;MAAE,CAACM,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;IAAM,CAAC,CAAC;EACzD,CAAC;EAED,oBACI5B,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAO8B,OAAO,EAAE,OAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtClC,OAAA;MAAOmC,EAAE,EAAC,OAAO;MAACC,QAAQ,EAAEZ,CAAC,IAAIpB,OAAO,CAACoB,CAAC,CAACE,MAAM,CAACE,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3DlC,OAAA;MAAO8B,OAAO,EAAE,UAAW;MAAAD,QAAA,GAAE1B,IAAI,CAACG,QAAQ,EAAC,GAAC;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpDlC,OAAA;MAAOmC,EAAE,EAAC,UAAU;MAACE,IAAI,EAAE,UAAW;MAACD,QAAQ,EAAEZ,CAAC,IAAIpB,OAAO,CAACoB,CAAC,CAACE,MAAM,CAACE,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChFlC,OAAA;MAAQsC,OAAO,EAAE/B,UAAW;MAAAsB,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAAChC,EAAA,CA3BQD,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AA6BhB,eAAeA,OAAO;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}